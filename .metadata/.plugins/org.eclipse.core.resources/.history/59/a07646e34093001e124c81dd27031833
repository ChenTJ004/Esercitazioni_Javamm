boolean circolareProva(char[][] M) {
	int m = M.length;
	int n = M[0].length;
	int numElementi = n * m;
	int rigaInizio = 0;
	int colonnaInizio = 0;

	int riga = 0;
	int colonna = 0;
	char azione;
	int index = 0;

	while (index < numElementi)
		{
		azione = M[riga][colonna];
	switch (azione) {
		case 'A': riga = (riga - 1 + m) % m;
		break;
		case 'B': riga = (riga + 1) % m;
		break;
		case 'S': colonna = (colonna - 1 + n) % n;
		break;
		case 'D': colonna = (colonna + 1) % n;
		break;
	}
	index++;
	if (riga == rigaInizio && colonna == colonnaInizio) {
		if (index == numElementi) {
			return true;
		} else {
			return false;
		}
	
}
return false;
}

boolean circolare(char[][]
M
) {

	return (false);
}

boolean circolareInversa(char[][] M) {

	return (false);
}

char[][] M = {{'S', 'B', 'A', 'D'}};
boolean circolare = circolareProva(M);
System.out.println(circolare);
