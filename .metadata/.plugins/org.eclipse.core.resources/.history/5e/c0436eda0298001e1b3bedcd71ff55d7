int[][] azzeraNonUnici(int[][] M, int r, int c) {
	int m = M.length;
	int n = M[0].length;
	int elemento = M[r][c];
	int i = 1;
	boolean nonUnico = false;
	while (c + i < n) {
		if (elemento == M[r][c + i]) {
			M[r][c + i] = 0;
			nonUnico = true;
		}
		i++;
	}

	i = 1;
	while (r + i < m) {
		if (elemento == M[r + i][c]) {
			M[r + i][c] = 0;
			nonUnico = true;
		}
		i++;
	}

	i = 1;
	while (r + i < m && c + i < n) {
		if (elemento == M[r + i][c + i]) {
			M[r + i][c + i] = 0;
			nonUnico = true;
		}
		i++;
	}

	if (nonUnico) {
		M[r][c] = 0;
	}

	return M;
}

int[][] azzeraNonUniciMatrice(int[][] M, int i, int j) {
	int m = M.length;
	int n = M[0].length;
	if (i < m) {
		if (j < n) {
			azzeraNonUniciMatrice(azzeraNonUnici(M, i, j), i, j+1);
		}else{
			azzeraNonUniciMatrice(azzeraNonUnici(M, i, j), i+1, 0);
		}
	}
	return M;
}

int[][] azzeraNonUniciMatrice(int[][] M) {
	return azzeraNonUniciMatrice(azzeraNonUniciMatrice(M), 0, 0);
}